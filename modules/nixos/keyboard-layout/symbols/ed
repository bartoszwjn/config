// My custom layout for an ErgoDox keyboard

default xkb_symbols "ed" {

    name[group1]="ErgoDox Custom";



    modifier_map Control { <LCTL>, <RCTL> };
    modifier_map Lock    { Caps_Lock };
    modifier_map Shift   { <LFSH>, <RTSH> };
    modifier_map Mod1    { <LALT> };
    modifier_map Mod2    { <NMLK> };
    modifier_map Mod3    { <CAPS> };
    modifier_map Mod4    { <LWIN>, <RWIN> };
    modifier_map Mod5    { <RALT> };



    key.type = "ONE_LEVEL";
    key <NMLK> { [ Num_Lock ] };



    key.type = "PC_CONTROL_LEVEL2";
    key <LCTL> { [ Control_L, ISO_Prev_Group ] };
    key <RCTL> { [ Control_R, ISO_Next_Group ] };

    key.type = "ONE_LEVEL";
    key <LFSH> { [ Shift_L          ] };
    key <RTSH> { [ Shift_R          ] };
    key <LALT> { [ Alt_L            ] };
    key <RALT> { [ ISO_Level3_Shift ] };
    key <LWIN> { [ Super_L          ] };
    key <RWIN> { [ Super_R          ] };
    key <COMP> { [ Super_R          ] };



    key.type = "ONE_LEVEL";
    key <CAPS> { [ ISO_Level5_Shift ] };
    key <ESC>  { [ Escape           ] };

    key.type = "TWO_LEVEL_FN";
    key <SPCE> { [ Space, underscore ] };

    key.type = "TWO_LEVEL";
    key <BKSP> { [ BackSpace, BackSpace    ] };
    key <TAB>  { [ Tab      , ISO_Left_Tab ] };

    key.type = "ONE_LEVEL";
    key <RTRN> { [ Return ] };



    key.type = "PC_ALT_LEVEL2";
    key <PRSC> { [ Print, Sys_Req ] };

    key.type = "ONE_LEVEL";
    key <PGUP> { [ Prior  ] };
    key <PGDN> { [ Next   ] };
    key <HOME> { [ Home   ] };
    key <END>  { [ End    ] };
    key <DELE> { [ Delete ] };



    key.type = "ALPHABETIC_UNICODE_FN";
    key <SCLK> { [ ampersand, ampersand, NoSymbol, NoSymbol, NoSymbol ] };
    key <INS>  { [ dollar   , dollar   , NoSymbol, NoSymbol, NoSymbol ] };

    key.type = "ONE_LEVEL";
    key <PAUS> { [ Caps_Lock ] };

    key.type = "ALPHABETIC_UNICODE_FN";
    key <FK13> { [ asterisk, asterisk, NoSymbol, NoSymbol, NoSymbol ] };
    key <FK14> { [ equal   , equal   , NoSymbol, NoSymbol, NoSymbol ] };



    key.type = "ALPHABETIC_UNICODE_FN";
    key <TLDE> { [ grave     , asciitilde, NoSymbol, NoSymbol, NoSymbol ] };
    key <AE01> { [ 1         , 1         , NoSymbol, NoSymbol, F1       ] };
    key <AE02> { [ 2         , 2         , NoSymbol, NoSymbol, F2       ] };
    key <AE03> { [ 3         , 3         , NoSymbol, NoSymbol, F3       ] };
    key <AE04> { [ 4         , 4         , NoSymbol, NoSymbol, F4       ] };
    key <AE05> { [ 5         , 5         , NoSymbol, NoSymbol, F5       ] };
    key <AE06> { [ 6         , 6         , NoSymbol, NoSymbol, F6       ] };
    key <AE07> { [ 7         , 7         , NoSymbol, NoSymbol, F7       ] };
    key <AE08> { [ 8         , 8         , NoSymbol, NoSymbol, F8       ] };
    key <AE09> { [ 9         , 9         , NoSymbol, NoSymbol, F9       ] };
    key <AE10> { [ 0         , 0         , NoSymbol, NoSymbol, F10      ] };
    key <AE11> { [ numbersign, numbersign, NoSymbol, NoSymbol, F11      ] };
    key <AE12> { [ percent   , percent   , NoSymbol, NoSymbol, F12      ] };



    key.type = "ALPHABETIC_UNICODE_FN";
    key <AD01> { [ q         , Q         , Greek_alpha, Greek_ALPHA   , XF86AudioRaiseVolume ] };
    key <AD02> { [ w         , W         , Greek_omega, Greek_OMEGA   , NoSymbol             ] };
    key <AD03> { [ e         , E         , eogonek    , Eogonek       , Up                   ] };
    key <AD04> { [ r         , R         , Greek_rho  , Greek_RHO     , NoSymbol             ] };
    key <AD05> { [ t         , T         , Greek_tau  , Greek_TAU     , NoSymbol             ] };
    key <AD06> { [ y         , Y         , multiply   , periodcentered, asterisk             ] };
    key <AD07> { [ u         , U         , logicalor  , union         , plus                 ] };
    key <AD08> { [ i         , I         , logicaland , intersection  , bracketleft          ] };
    key <AD09> { [ o         , O         , oacute     , Oacute        , bracketright         ] };
    key <AD10> { [ p         , P         , Greek_pi   , Greek_PI      , ampersand            ] };
    key <AD11> { [ percent   , percent   , NoSymbol   , NoSymbol      , NoSymbol             ] };
    key <AD12> { [ numbersign, numbersign, NoSymbol   , NoSymbol      , NoSymbol             ] };
    key <BKSL> { [ backslash , bar       , NoSymbol   , NoSymbol      , percent              ] };



    key.type = "ALPHABETIC_UNICODE_FN";
    key <AC01> { [ a         , A       , aogonek    , Aogonek    , XF86AudioLowerVolume ] };
    key <AC02> { [ s         , S       , sacute     , Sacute     , Left                 ] };
    key <AC03> { [ d         , D       , Greek_delta, Greek_DELTA, Down                 ] };
    key <AC04> { [ f         , F       , Greek_phi  , Greek_PHI  , Right                ] };
    key <AC05> { [ g         , G       , Greek_gamma, Greek_GAMMA, NoSymbol             ] };
    key <AC06> { [ h         , H       , identical  , notequal   , equal                ] };
    key <AC07> { [ j         , J       , leftarrow  , downarrow  , minus                ] };
    key <AC08> { [ k         , K       , rightarrow , uparrow    , parenleft            ] };
    key <AC09> { [ l         , L       , lstroke    , Lstroke    , parenright           ] };
    key <AC10> { [ semicolon , colon   , U2200      , U2203      , dollar               ] };
    key <AC11> { [ apostrophe, quotedbl, NoSymbol   , NoSymbol   , numbersign           ] };



    key.type = "ALPHABETIC_UNICODE_FN";
    key <AB01> { [ z     , Z       , zabovedot       , Zabovedot   , XF86AudioMute ] };
    key <AB02> { [ x     , X       , zacute          , Zacute      , XF86AudioPrev ] };
    key <AB03> { [ c     , C       , cacute          , Cacute      , XF86AudioPlay ] };
    key <AB04> { [ v     , V       , Greek_lambda    , Greek_LAMBDA, XF86AudioNext ] };
    key <AB05> { [ b     , B       , Greek_beta      , Greek_BETA  , NoSymbol      ] };
    key <AB06> { [ n     , N       , nacute          , Nacute      , at            ] };
    key <AB07> { [ m     , M       , elementof       , notelementof, asciicircum   ] };
    key <AB08> { [ comma , less    , lessthanequal   , U2286       , braceleft     ] };
    key <AB09> { [ period, greater , greaterthanequal, U2287       , braceright    ] };
    key <AB10> { [ slash , question, ellipsis        , infinity    , exclam        ] };



    key.type = "CTRL+ALT";
    key <FK01> { [ F1 , F1 , F1 , F1 , XF86Switch_VT_1  ] };
    key <FK02> { [ F2 , F2 , F2 , F2 , XF86Switch_VT_2  ] };
    key <FK03> { [ F3 , F3 , F3 , F3 , XF86Switch_VT_3  ] };
    key <FK04> { [ F4 , F4 , F4 , F4 , XF86Switch_VT_4  ] };
    key <FK05> { [ F5 , F5 , F5 , F5 , XF86Switch_VT_5  ] };
    key <FK06> { [ F6 , F6 , F6 , F6 , XF86Switch_VT_6  ] };
    key <FK07> { [ F7 , F7 , F7 , F7 , XF86Switch_VT_7  ] };
    key <FK08> { [ F8 , F8 , F8 , F8 , XF86Switch_VT_8  ] };
    key <FK09> { [ F9 , F9 , F9 , F9 , XF86Switch_VT_9  ] };
    key <FK10> { [ F10, F10, F10, F10, XF86Switch_VT_10 ] };
    key <FK11> { [ F11, F11, F11, F11, XF86Switch_VT_11 ] };
    key <FK12> { [ F12, F12, F12, F12, XF86Switch_VT_12 ] };



    key.type = "ONE_LEVEL";
    key <KPEN> { [ KP_Enter ] };

    key.type = "CTRL+ALT";
    key <KPAD> { [ KP_Add     , KP_Add     , KP_Add     , KP_Add     , XF86Next_VMode ] };
    key <KPSU> { [ KP_Subtract, KP_Subtract, KP_Subtract, KP_Subtract, XF86Prev_VMode ] };
    key <KPMU> { [ KP_Multiply, KP_Multiply, KP_Multiply, KP_Multiply, XF86ClearGrab  ] };
    key <KPDV> { [ KP_Divide  , KP_Divide  , KP_Divide  , KP_Divide  , XF86Ungrab     ] };

    key.type = "KEYPAD";
    key <KPDL> { [ KP_Delete, KP_Separator ] };
    key <KP0>  { [ KP_Insert, KP_0         ] };
    key <KP1>  { [ KP_End   , KP_1         ] };
    key <KP2>  { [ KP_Down  , KP_2         ] };
    key <KP3>  { [ KP_Next  , KP_3         ] };
    key <KP4>  { [ KP_Left  , KP_4         ] };
    key <KP5>  { [ KP_Begin , KP_5         ] };
    key <KP6>  { [ KP_Right , KP_6         ] };
    key <KP7>  { [ KP_Home  , KP_7         ] };
    key <KP8>  { [ KP_Up    , KP_8         ] };
    key <KP9>  { [ KP_Prior , KP_9         ] };



    key.type = "ONE_LEVEL";
    key <UP>   { [ Up    ] };
    key <LEFT> { [ Left  ] };
    key <RGHT> { [ Right ] };
    key <DOWN> { [ Down  ] };



    key.type = "ONE_LEVEL";
    key <MUTE> { [ XF86AudioMute        ] };
    key <VOL-> { [ XF86AudioLowerVolume ] };
    key <VOL+> { [ XF86AudioRaiseVolume ] };
    key <I171> { [ XF86AudioNext        ] };
    key <I172> { [ XF86AudioPlay        ] };
    key <I173> { [ XF86AudioPrev        ] };



    key.type = "ONE_LEVEL";
    key <FK15> { [ F15 ] };
    key <FK16> { [ F16 ] };
    key <FK17> { [ F17 ] };
    key <FK18> { [ F18 ] };
    key <FK19> { [ F19 ] };
    key <FK20> { [ F20 ] };
    key <FK21> { [ F21 ] };
    key <FK22> { [ F22 ] };
    key <FK23> { [ F23 ] };
    key <FK24> { [ F24 ] };
};
